html {
  -webkit-user-select: text;
}

body {
	overflow-x: hidden;
	opacity: 0;
	visibility: hidden;
	transition: opacity 0.5s ease-in-out;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	min-height: 100vh;
	color: #1b1b1c;
	background-color: #F5F5F5;
	text-rendering: geometricPrecision;
	backface-visibility: hidden;
    -webkit-font-smoothing: subpixel-antialiased;

  &.loaded {
    opacity: 1;
    visibility: visible;
  }

  &.light {
  	.site-content {
  		@extend .grain--light;
  	}
  }
}

*:focus {
	outline: none !important;
}

.blur, .blur-form {
	transition: 0.8s;
	filter: blur(5px) grayscale(10%);
}

.site-content {
	@supports not (-ms-high-contrast: none) {
		flex: 1;
	    display: flex;
	    flex-direction: column;
	    justify-content: center;
	}
}

.container-fluid {
	padding-left: 32px;
	padding-right: 32px;
}

.container {
	max-width: none !important;
	padding-left: 32px;
	padding-right: 32px;

	@include media-breakpoint-up(sm) {
		padding-left: 122px;
		padding-right: 122px;
	}

	@include media-breakpoint-up(md) {
		padding-left: 128px;
		padding-right: 128px;
	}

	&--pr {
		@include media-breakpoint-up(md) {
			padding-right: 100px;
		}
	}

	&--small-fluid {
		@include media-breakpoint-down(sm) {
			padding-left: 32px !important;
			padding-right: 32px !important;
		}
	}
}

.img-absolute {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;

    &.img-grid {
    	@include media-breakpoint-up(sm) {
	    	left: 8px;
	    	width: calc(100% - 16px);
	    }
    }
    
    &.lazy {
    	//opacity: 0;
    }
}

.img-fluid {
    object-fit: cover;
}

.jarallax {
    position: relative;
    z-index: 0;

    & > .jarallax-img {
	    position: absolute;
	    object-fit: cover;
	    top: 0;
	    left: 0;
	    width: 100%;
	    height: 100%;
	    z-index: -1;
	}
}

video {
	width: 100%;
}

$padding-breakpoints: 0px, $sm, $md, $lg, $xl;
$padding-breakpoints-names: '', '-sm', '-md', '-lg', '-xl';

@each $breakpoint in $padding-breakpoints {
	$n: index($padding-breakpoints, $breakpoint);
	@for $i from 0 through 10 {
		$name: nth($padding-breakpoints-names, $n);
		.padding-top#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				padding-top: $i * 48px !important;
			}
		}

		.padding-bottom#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				padding-bottom: $i * 48px !important;
			}
		}

		.padding-right#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				padding-right: $i * 48px !important;
			}
		}

		.padding-left#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				padding-left: $i * 48px !important;
			}
		}

		.padding-y#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				padding-top: $i * 48px !important;
				padding-bottom: $i * 48px !important;
			}
		}

		.padding-x#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				padding-left: $i * 48px !important;
				padding-right: $i * 48px !important;
			}
		}

		.margin-top#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				margin-top: $i * 48px !important;
			}
		}

		.margin-bottom#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				margin-bottom: $i * 48px !important;
			}
		}

		.margin-right#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				margin-right: $i * 48px !important;
			}
		}

		.margin-left#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				margin-left: $i * 48px !important;
			}
		}

		.margin-y#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				margin-top: $i * 48px !important;
				margin-bottom: $i * 48px !important;
			}
		}

		.margin-x#{$name}-#{$i} {
			@media (min-width: #{$breakpoint}) {
				margin-left: $i * 48px !important;
				margin-right: $i * 48px !important;
			}
		}
	}
}